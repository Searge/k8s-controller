---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

env:
  FORCE_COLOR: 1
  ANSIBLE_CONFIG: "{{.USER_WORKING_DIR}}/ansible/ansible.cfg"
  APP_DIR: "/srv/app"
  VM_NAME: "dev"

tasks:
  default:
    desc: "Show available tasks"
    aliases:
      - l
      - a
    cmds:
      - task --list-all
    silent: true

  ######################################################################
  # PODMAN COMMANDS
  ######################################################################
  init:
    desc: "Init Podman machine"
    dir: "{{.USER_WORKING_DIR}}"
    cmds: ["./scripts/init.sh"]

  ssh:
    desc: "SSH into the Podman machine"
    summary: |
      Pass commands after `--`
      to be executed on the remote machine.

      Example:
        task ssh -- 'ls -lha ~'

      {{.CLI_ARGS}} captures all arguments passed to the task after '--'.
      If no arguments are given, it's empty, and 'podman machine ssh' starts an interactive session.
      If arguments are given, they are appended to the command and executed on the remote machine.
    cmds:
      - podman machine ssh {{.VM_NAME}} {{.CLI_ARGS}}

  reboot:
    desc: "Reboot Podman machine"
    cmds:
      - podman machine stop {{.VM_NAME}}
      - sleep 2
      - podman machine start {{.VM_NAME}}

  rm:
    desc: "Remove Podman machine"
    cmds: ["podman machine rm {{.VM_NAME}} -f"]

  ######################################################################
  # ANSIBLE PROVISIONING
  ######################################################################
  provision:
    dir: "{{.USER_WORKING_DIR}}/ansible"
    desc: "Run ansible-playbook"
    summary: |
      Task for running on remote or localy

      Example:
        task provision # If you in the podman machine
        task ssh -- 'cd /srv/app && go-task provision' # To run from the host machine
    cmds:
      - ansible-playbook provision.yml
